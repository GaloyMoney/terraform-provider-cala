// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package provider

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

type AccountCreateInput struct {
	AccountId         string           `json:"accountId"`
	ExternalId        *string          `json:"externalId"`
	Code              string           `json:"code"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Status            Status           `json:"status"`
	Metadata          *json.RawMessage `json:"metadata"`
	AccountSetIds     []string         `json:"accountSetIds"`
}

// GetAccountId returns AccountCreateInput.AccountId, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetAccountId() string { return v.AccountId }

// GetExternalId returns AccountCreateInput.ExternalId, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetExternalId() *string { return v.ExternalId }

// GetCode returns AccountCreateInput.Code, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetCode() string { return v.Code }

// GetName returns AccountCreateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetName() string { return v.Name }

// GetNormalBalanceType returns AccountCreateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountCreateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetDescription() *string { return v.Description }

// GetStatus returns AccountCreateInput.Status, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetStatus() Status { return v.Status }

// GetMetadata returns AccountCreateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetMetadata() *json.RawMessage { return v.Metadata }

// GetAccountSetIds returns AccountCreateInput.AccountSetIds, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetAccountSetIds() []string { return v.AccountSetIds }

type AccountSetCreateInput struct {
	AccountSetId      string           `json:"accountSetId"`
	JournalId         string           `json:"journalId"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountSetId returns AccountSetCreateInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetAccountSetId() string { return v.AccountSetId }

// GetJournalId returns AccountSetCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetJournalId() string { return v.JournalId }

// GetName returns AccountSetCreateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetName() string { return v.Name }

// GetNormalBalanceType returns AccountSetCreateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountSetCreateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetDescription() *string { return v.Description }

// GetMetadata returns AccountSetCreateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetMetadata() *json.RawMessage { return v.Metadata }

type BfxIntegrationCreateInput struct {
	IntegrationId string  `json:"integrationId"`
	Name          string  `json:"name"`
	Description   *string `json:"description"`
	JournalId     string  `json:"journalId"`
	Key           string  `json:"key"`
	Secret        string  `json:"secret"`
}

// GetIntegrationId returns BfxIntegrationCreateInput.IntegrationId, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetIntegrationId() string { return v.IntegrationId }

// GetName returns BfxIntegrationCreateInput.Name, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetName() string { return v.Name }

// GetDescription returns BfxIntegrationCreateInput.Description, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetDescription() *string { return v.Description }

// GetJournalId returns BfxIntegrationCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetJournalId() string { return v.JournalId }

// GetKey returns BfxIntegrationCreateInput.Key, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetKey() string { return v.Key }

// GetSecret returns BfxIntegrationCreateInput.Secret, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetSecret() string { return v.Secret }

type DebitOrCredit string

const (
	DebitOrCreditDebit  DebitOrCredit = "DEBIT"
	DebitOrCreditCredit DebitOrCredit = "CREDIT"
)

type JournalCreateInput struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Status      Status  `json:"status"`
	Description *string `json:"description"`
}

// GetJournalId returns JournalCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetJournalId() string { return v.JournalId }

// GetName returns JournalCreateInput.Name, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetName() string { return v.Name }

// GetStatus returns JournalCreateInput.Status, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetStatus() Status { return v.Status }

// GetDescription returns JournalCreateInput.Description, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetDescription() *string { return v.Description }

type Status string

const (
	StatusActive Status = "ACTIVE"
	StatusLocked Status = "LOCKED"
)

// __accountCreateInput is used internally by genqlient
type __accountCreateInput struct {
	Input AccountCreateInput `json:"input"`
}

// GetInput returns __accountCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountCreateInput) GetInput() AccountCreateInput { return v.Input }

// __accountGetInput is used internally by genqlient
type __accountGetInput struct {
	Id string `json:"id"`
}

// GetId returns __accountGetInput.Id, and is useful for accessing the field via an interface.
func (v *__accountGetInput) GetId() string { return v.Id }

// __accountSetCreateInput is used internally by genqlient
type __accountSetCreateInput struct {
	Input AccountSetCreateInput `json:"input"`
}

// GetInput returns __accountSetCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountSetCreateInput) GetInput() AccountSetCreateInput { return v.Input }

// __accountSetMemberAccountCreateInput is used internally by genqlient
type __accountSetMemberAccountCreateInput struct {
	AccountSetId string `json:"accountSetId"`
	AccountId    string `json:"accountId"`
}

// GetAccountSetId returns __accountSetMemberAccountCreateInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountCreateInput) GetAccountSetId() string { return v.AccountSetId }

// GetAccountId returns __accountSetMemberAccountCreateInput.AccountId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountCreateInput) GetAccountId() string { return v.AccountId }

// __bfxIntegrationCreateInput is used internally by genqlient
type __bfxIntegrationCreateInput struct {
	Input BfxIntegrationCreateInput `json:"input"`
}

// GetInput returns __bfxIntegrationCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__bfxIntegrationCreateInput) GetInput() BfxIntegrationCreateInput { return v.Input }

// __bfxIntegrationGetInput is used internally by genqlient
type __bfxIntegrationGetInput struct {
	Id string `json:"id"`
}

// GetId returns __bfxIntegrationGetInput.Id, and is useful for accessing the field via an interface.
func (v *__bfxIntegrationGetInput) GetId() string { return v.Id }

// __journalCreateInput is used internally by genqlient
type __journalCreateInput struct {
	Input JournalCreateInput `json:"input"`
}

// GetInput returns __journalCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__journalCreateInput) GetInput() JournalCreateInput { return v.Input }

// accountCreateAccountCreateAccountCreatePayload includes the requested fields of the GraphQL type AccountCreatePayload.
type accountCreateAccountCreateAccountCreatePayload struct {
	Account accountCreateAccountCreateAccountCreatePayloadAccount `json:"account"`
}

// GetAccount returns accountCreateAccountCreateAccountCreatePayload.Account, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayload) GetAccount() accountCreateAccountCreateAccountCreatePayloadAccount {
	return v.Account
}

// accountCreateAccountCreateAccountCreatePayloadAccount includes the requested fields of the GraphQL type Account.
type accountCreateAccountCreateAccountCreatePayloadAccount struct {
	AccountId         string           `json:"accountId"`
	Code              string           `json:"code"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Status            Status           `json:"status"`
	ExternalId        *string          `json:"externalId"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountId returns accountCreateAccountCreateAccountCreatePayloadAccount.AccountId, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetAccountId() string {
	return v.AccountId
}

// GetCode returns accountCreateAccountCreateAccountCreatePayloadAccount.Code, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetCode() string { return v.Code }

// GetName returns accountCreateAccountCreateAccountCreatePayloadAccount.Name, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetName() string { return v.Name }

// GetNormalBalanceType returns accountCreateAccountCreateAccountCreatePayloadAccount.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// GetStatus returns accountCreateAccountCreateAccountCreatePayloadAccount.Status, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetStatus() Status { return v.Status }

// GetExternalId returns accountCreateAccountCreateAccountCreatePayloadAccount.ExternalId, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetExternalId() *string {
	return v.ExternalId
}

// GetDescription returns accountCreateAccountCreateAccountCreatePayloadAccount.Description, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetDescription() *string {
	return v.Description
}

// GetMetadata returns accountCreateAccountCreateAccountCreatePayloadAccount.Metadata, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetMetadata() *json.RawMessage {
	return v.Metadata
}

// accountCreateResponse is returned by accountCreate on success.
type accountCreateResponse struct {
	AccountCreate accountCreateAccountCreateAccountCreatePayload `json:"accountCreate"`
}

// GetAccountCreate returns accountCreateResponse.AccountCreate, and is useful for accessing the field via an interface.
func (v *accountCreateResponse) GetAccountCreate() accountCreateAccountCreateAccountCreatePayload {
	return v.AccountCreate
}

// accountGetAccount includes the requested fields of the GraphQL type Account.
type accountGetAccount struct {
	AccountId         string                                    `json:"accountId"`
	Name              string                                    `json:"name"`
	Description       *string                                   `json:"description"`
	Status            Status                                    `json:"status"`
	Metadata          *json.RawMessage                          `json:"metadata"`
	Code              string                                    `json:"code"`
	NormalBalanceType DebitOrCredit                             `json:"normalBalanceType"`
	ExternalId        *string                                   `json:"externalId"`
	Sets              accountGetAccountSetsAccountSetConnection `json:"sets"`
}

// GetAccountId returns accountGetAccount.AccountId, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetAccountId() string { return v.AccountId }

// GetName returns accountGetAccount.Name, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetName() string { return v.Name }

// GetDescription returns accountGetAccount.Description, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetDescription() *string { return v.Description }

// GetStatus returns accountGetAccount.Status, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetStatus() Status { return v.Status }

// GetMetadata returns accountGetAccount.Metadata, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetMetadata() *json.RawMessage { return v.Metadata }

// GetCode returns accountGetAccount.Code, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetCode() string { return v.Code }

// GetNormalBalanceType returns accountGetAccount.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetExternalId returns accountGetAccount.ExternalId, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetExternalId() *string { return v.ExternalId }

// GetSets returns accountGetAccount.Sets, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetSets() accountGetAccountSetsAccountSetConnection { return v.Sets }

// accountGetAccountSetsAccountSetConnection includes the requested fields of the GraphQL type AccountSetConnection.
type accountGetAccountSetsAccountSetConnection struct {
	// A list of nodes.
	Nodes []accountGetAccountSetsAccountSetConnectionNodesAccountSet `json:"nodes"`
}

// GetNodes returns accountGetAccountSetsAccountSetConnection.Nodes, and is useful for accessing the field via an interface.
func (v *accountGetAccountSetsAccountSetConnection) GetNodes() []accountGetAccountSetsAccountSetConnectionNodesAccountSet {
	return v.Nodes
}

// accountGetAccountSetsAccountSetConnectionNodesAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountGetAccountSetsAccountSetConnectionNodesAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountGetAccountSetsAccountSetConnectionNodesAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountGetAccountSetsAccountSetConnectionNodesAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountGetResponse is returned by accountGet on success.
type accountGetResponse struct {
	Account *accountGetAccount `json:"account"`
}

// GetAccount returns accountGetResponse.Account, and is useful for accessing the field via an interface.
func (v *accountGetResponse) GetAccount() *accountGetAccount { return v.Account }

// accountSetCreateAccountSetCreateAccountSetCreatePayload includes the requested fields of the GraphQL type AccountSetCreatePayload.
type accountSetCreateAccountSetCreateAccountSetCreatePayload struct {
	AccountSet accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetCreateAccountSetCreateAccountSetCreatePayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayload) GetAccountSet() accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet {
	return v.AccountSet
}

// accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet struct {
	AccountSetId      string           `json:"accountSetId"`
	JournalId         string           `json:"journalId"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountSetId returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// GetJournalId returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.JournalId, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetJournalId() string {
	return v.JournalId
}

// GetName returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Name, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetName() string {
	return v.Name
}

// GetNormalBalanceType returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// GetDescription returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Description, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetDescription() *string {
	return v.Description
}

// GetMetadata returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Metadata, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetMetadata() *json.RawMessage {
	return v.Metadata
}

// accountSetCreateResponse is returned by accountSetCreate on success.
type accountSetCreateResponse struct {
	AccountSetCreate accountSetCreateAccountSetCreateAccountSetCreatePayload `json:"accountSetCreate"`
}

// GetAccountSetCreate returns accountSetCreateResponse.AccountSetCreate, and is useful for accessing the field via an interface.
func (v *accountSetCreateResponse) GetAccountSetCreate() accountSetCreateAccountSetCreateAccountSetCreatePayload {
	return v.AccountSetCreate
}

// accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload includes the requested fields of the GraphQL type AddToAccountSetPayload.
type accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload struct {
	AccountSet accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload) GetAccountSet() accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet {
	return v.AccountSet
}

// accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetMemberAccountCreateResponse is returned by accountSetMemberAccountCreate on success.
type accountSetMemberAccountCreateResponse struct {
	AddToAccountSet accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload `json:"addToAccountSet"`
}

// GetAddToAccountSet returns accountSetMemberAccountCreateResponse.AddToAccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateResponse) GetAddToAccountSet() accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload {
	return v.AddToAccountSet
}

// bfxIntegrationCreateBitfinexBitfinexMutation includes the requested fields of the GraphQL type BitfinexMutation.
type bfxIntegrationCreateBitfinexBitfinexMutation struct {
	IntegrationCreate bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload `json:"integrationCreate"`
}

// GetIntegrationCreate returns bfxIntegrationCreateBitfinexBitfinexMutation.IntegrationCreate, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutation) GetIntegrationCreate() bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload {
	return v.IntegrationCreate
}

// bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload includes the requested fields of the GraphQL type BfxIntegrationCreatePayload.
type bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload struct {
	Integration bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration `json:"integration"`
}

// GetIntegration returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload.Integration, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload) GetIntegration() bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration {
	return v.Integration
}

// bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration includes the requested fields of the GraphQL type BfxIntegration.
type bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration struct {
	IntegrationId       string  `json:"integrationId"`
	Name                string  `json:"name"`
	Description         *string `json:"description"`
	OmnibusAccountSetId string  `json:"omnibusAccountSetId"`
}

// GetIntegrationId returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.Name, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.Description, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetDescription() *string {
	return v.Description
}

// GetOmnibusAccountSetId returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.OmnibusAccountSetId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetOmnibusAccountSetId() string {
	return v.OmnibusAccountSetId
}

// bfxIntegrationCreateResponse is returned by bfxIntegrationCreate on success.
type bfxIntegrationCreateResponse struct {
	Bitfinex bfxIntegrationCreateBitfinexBitfinexMutation `json:"bitfinex"`
}

// GetBitfinex returns bfxIntegrationCreateResponse.Bitfinex, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateResponse) GetBitfinex() bfxIntegrationCreateBitfinexBitfinexMutation {
	return v.Bitfinex
}

// bfxIntegrationGetBitfinexBitfinexQuery includes the requested fields of the GraphQL type BitfinexQuery.
type bfxIntegrationGetBitfinexBitfinexQuery struct {
	Integration *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration `json:"integration"`
}

// GetIntegration returns bfxIntegrationGetBitfinexBitfinexQuery.Integration, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQuery) GetIntegration() *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration {
	return v.Integration
}

// bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration includes the requested fields of the GraphQL type BfxIntegration.
type bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration struct {
	IntegrationId       string  `json:"integrationId"`
	Name                string  `json:"name"`
	Description         *string `json:"description"`
	OmnibusAccountSetId string  `json:"omnibusAccountSetId"`
}

// GetIntegrationId returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.Name, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.Description, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetDescription() *string {
	return v.Description
}

// GetOmnibusAccountSetId returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.OmnibusAccountSetId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetOmnibusAccountSetId() string {
	return v.OmnibusAccountSetId
}

// bfxIntegrationGetResponse is returned by bfxIntegrationGet on success.
type bfxIntegrationGetResponse struct {
	Bitfinex bfxIntegrationGetBitfinexBitfinexQuery `json:"bitfinex"`
}

// GetBitfinex returns bfxIntegrationGetResponse.Bitfinex, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetResponse) GetBitfinex() bfxIntegrationGetBitfinexBitfinexQuery {
	return v.Bitfinex
}

// journalCreateJournalCreateJournalCreatePayload includes the requested fields of the GraphQL type JournalCreatePayload.
type journalCreateJournalCreateJournalCreatePayload struct {
	Journal journalCreateJournalCreateJournalCreatePayloadJournal `json:"journal"`
}

// GetJournal returns journalCreateJournalCreateJournalCreatePayload.Journal, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayload) GetJournal() journalCreateJournalCreateJournalCreatePayloadJournal {
	return v.Journal
}

// journalCreateJournalCreateJournalCreatePayloadJournal includes the requested fields of the GraphQL type Journal.
type journalCreateJournalCreateJournalCreatePayloadJournal struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Status      Status  `json:"status"`
}

// GetJournalId returns journalCreateJournalCreateJournalCreatePayloadJournal.JournalId, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetJournalId() string {
	return v.JournalId
}

// GetName returns journalCreateJournalCreateJournalCreatePayloadJournal.Name, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetName() string { return v.Name }

// GetDescription returns journalCreateJournalCreateJournalCreatePayloadJournal.Description, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetDescription() *string {
	return v.Description
}

// GetStatus returns journalCreateJournalCreateJournalCreatePayloadJournal.Status, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetStatus() Status { return v.Status }

// journalCreateResponse is returned by journalCreate on success.
type journalCreateResponse struct {
	JournalCreate journalCreateJournalCreateJournalCreatePayload `json:"journalCreate"`
}

// GetJournalCreate returns journalCreateResponse.JournalCreate, and is useful for accessing the field via an interface.
func (v *journalCreateResponse) GetJournalCreate() journalCreateJournalCreateJournalCreatePayload {
	return v.JournalCreate
}

// The query or mutation executed by accountCreate.
const accountCreate_Operation = `
mutation accountCreate ($input: AccountCreateInput!) {
	accountCreate(input: $input) {
		account {
			accountId
			code
			name
			normalBalanceType
			status
			externalId
			description
			metadata
		}
	}
}
`

func accountCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input AccountCreateInput,
) (*accountCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountCreate",
		Query:  accountCreate_Operation,
		Variables: &__accountCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ accountCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountGet.
const accountGet_Operation = `
query accountGet ($id: UUID!) {
	account(id: $id) {
		accountId
		name
		description
		status
		metadata
		code
		normalBalanceType
		externalId
		sets(first: 10) {
			nodes {
				accountSetId
			}
		}
	}
}
`

func accountGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*accountGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountGet",
		Query:  accountGet_Operation,
		Variables: &__accountGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ accountGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetCreate.
const accountSetCreate_Operation = `
mutation accountSetCreate ($input: AccountSetCreateInput!) {
	accountSetCreate(input: $input) {
		accountSet {
			accountSetId
			journalId
			name
			normalBalanceType
			description
			metadata
		}
	}
}
`

func accountSetCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input AccountSetCreateInput,
) (*accountSetCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetCreate",
		Query:  accountSetCreate_Operation,
		Variables: &__accountSetCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ accountSetCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetMemberAccountCreate.
const accountSetMemberAccountCreate_Operation = `
mutation accountSetMemberAccountCreate ($accountSetId: UUID!, $accountId: UUID!) {
	addToAccountSet(input: {accountSetId:$accountSetId,memberId:$accountId,memberType:ACCOUNT}) {
		accountSet {
			accountSetId
		}
	}
}
`

func accountSetMemberAccountCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	accountSetId string,
	accountId string,
) (*accountSetMemberAccountCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetMemberAccountCreate",
		Query:  accountSetMemberAccountCreate_Operation,
		Variables: &__accountSetMemberAccountCreateInput{
			AccountSetId: accountSetId,
			AccountId:    accountId,
		},
	}
	var err_ error

	var data_ accountSetMemberAccountCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bfxIntegrationCreate.
const bfxIntegrationCreate_Operation = `
mutation bfxIntegrationCreate ($input: BfxIntegrationCreateInput!) {
	bitfinex {
		integrationCreate(input: $input) {
			integration {
				integrationId
				name
				description
				omnibusAccountSetId
			}
		}
	}
}
`

func bfxIntegrationCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input BfxIntegrationCreateInput,
) (*bfxIntegrationCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "bfxIntegrationCreate",
		Query:  bfxIntegrationCreate_Operation,
		Variables: &__bfxIntegrationCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ bfxIntegrationCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bfxIntegrationGet.
const bfxIntegrationGet_Operation = `
query bfxIntegrationGet ($id: UUID!) {
	bitfinex {
		integration(id: $id) {
			integrationId
			name
			description
			omnibusAccountSetId
		}
	}
}
`

func bfxIntegrationGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*bfxIntegrationGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "bfxIntegrationGet",
		Query:  bfxIntegrationGet_Operation,
		Variables: &__bfxIntegrationGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ bfxIntegrationGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by journalCreate.
const journalCreate_Operation = `
mutation journalCreate ($input: JournalCreateInput!) {
	journalCreate(input: $input) {
		journal {
			journalId
			name
			description
			status
		}
	}
}
`

func journalCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input JournalCreateInput,
) (*journalCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "journalCreate",
		Query:  journalCreate_Operation,
		Variables: &__journalCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ journalCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
