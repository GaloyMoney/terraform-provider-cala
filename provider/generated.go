// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package provider

import (
	"context"
	"encoding/json"

	"github.com/Khan/genqlient/graphql"
)

type AccountCreateInput struct {
	AccountId         string           `json:"accountId"`
	ExternalId        *string          `json:"externalId"`
	Code              string           `json:"code"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Status            Status           `json:"status"`
	Metadata          *json.RawMessage `json:"metadata"`
	AccountSetIds     []string         `json:"accountSetIds"`
}

// GetAccountId returns AccountCreateInput.AccountId, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetAccountId() string { return v.AccountId }

// GetExternalId returns AccountCreateInput.ExternalId, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetExternalId() *string { return v.ExternalId }

// GetCode returns AccountCreateInput.Code, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetCode() string { return v.Code }

// GetName returns AccountCreateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetName() string { return v.Name }

// GetNormalBalanceType returns AccountCreateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountCreateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetDescription() *string { return v.Description }

// GetStatus returns AccountCreateInput.Status, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetStatus() Status { return v.Status }

// GetMetadata returns AccountCreateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetMetadata() *json.RawMessage { return v.Metadata }

// GetAccountSetIds returns AccountCreateInput.AccountSetIds, and is useful for accessing the field via an interface.
func (v *AccountCreateInput) GetAccountSetIds() []string { return v.AccountSetIds }

type AccountSetCreateInput struct {
	AccountSetId      string           `json:"accountSetId"`
	JournalId         string           `json:"journalId"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountSetId returns AccountSetCreateInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetAccountSetId() string { return v.AccountSetId }

// GetJournalId returns AccountSetCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetJournalId() string { return v.JournalId }

// GetName returns AccountSetCreateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetName() string { return v.Name }

// GetNormalBalanceType returns AccountSetCreateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountSetCreateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetDescription() *string { return v.Description }

// GetMetadata returns AccountSetCreateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountSetCreateInput) GetMetadata() *json.RawMessage { return v.Metadata }

type AccountSetUpdateInput struct {
	Name              *string          `json:"name"`
	NormalBalanceType *DebitOrCredit   `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetName returns AccountSetUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountSetUpdateInput) GetName() *string { return v.Name }

// GetNormalBalanceType returns AccountSetUpdateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountSetUpdateInput) GetNormalBalanceType() *DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountSetUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountSetUpdateInput) GetDescription() *string { return v.Description }

// GetMetadata returns AccountSetUpdateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountSetUpdateInput) GetMetadata() *json.RawMessage { return v.Metadata }

type AccountUpdateInput struct {
	ExternalId        *string          `json:"externalId"`
	Code              *string          `json:"code"`
	Name              *string          `json:"name"`
	NormalBalanceType *DebitOrCredit   `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Status            *Status          `json:"status"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetExternalId returns AccountUpdateInput.ExternalId, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetExternalId() *string { return v.ExternalId }

// GetCode returns AccountUpdateInput.Code, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetCode() *string { return v.Code }

// GetName returns AccountUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetName() *string { return v.Name }

// GetNormalBalanceType returns AccountUpdateInput.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetNormalBalanceType() *DebitOrCredit { return v.NormalBalanceType }

// GetDescription returns AccountUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetDescription() *string { return v.Description }

// GetStatus returns AccountUpdateInput.Status, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetStatus() *Status { return v.Status }

// GetMetadata returns AccountUpdateInput.Metadata, and is useful for accessing the field via an interface.
func (v *AccountUpdateInput) GetMetadata() *json.RawMessage { return v.Metadata }

type BfxIntegrationCreateInput struct {
	IntegrationId string  `json:"integrationId"`
	Name          string  `json:"name"`
	Description   *string `json:"description"`
	JournalId     string  `json:"journalId"`
	Key           string  `json:"key"`
	Secret        string  `json:"secret"`
}

// GetIntegrationId returns BfxIntegrationCreateInput.IntegrationId, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetIntegrationId() string { return v.IntegrationId }

// GetName returns BfxIntegrationCreateInput.Name, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetName() string { return v.Name }

// GetDescription returns BfxIntegrationCreateInput.Description, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetDescription() *string { return v.Description }

// GetJournalId returns BfxIntegrationCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetJournalId() string { return v.JournalId }

// GetKey returns BfxIntegrationCreateInput.Key, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetKey() string { return v.Key }

// GetSecret returns BfxIntegrationCreateInput.Secret, and is useful for accessing the field via an interface.
func (v *BfxIntegrationCreateInput) GetSecret() string { return v.Secret }

type BigQueryIntegrationCreateInput struct {
	IntegrationId             string  `json:"integrationId"`
	Name                      string  `json:"name"`
	Description               *string `json:"description"`
	GcpProjectId              string  `json:"gcpProjectId"`
	GcpDatasetId              string  `json:"gcpDatasetId"`
	ServiceAccountCredsBase64 string  `json:"serviceAccountCredsBase64"`
}

// GetIntegrationId returns BigQueryIntegrationCreateInput.IntegrationId, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetIntegrationId() string { return v.IntegrationId }

// GetName returns BigQueryIntegrationCreateInput.Name, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetName() string { return v.Name }

// GetDescription returns BigQueryIntegrationCreateInput.Description, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetDescription() *string { return v.Description }

// GetGcpProjectId returns BigQueryIntegrationCreateInput.GcpProjectId, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetGcpProjectId() string { return v.GcpProjectId }

// GetGcpDatasetId returns BigQueryIntegrationCreateInput.GcpDatasetId, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetGcpDatasetId() string { return v.GcpDatasetId }

// GetServiceAccountCredsBase64 returns BigQueryIntegrationCreateInput.ServiceAccountCredsBase64, and is useful for accessing the field via an interface.
func (v *BigQueryIntegrationCreateInput) GetServiceAccountCredsBase64() string {
	return v.ServiceAccountCredsBase64
}

type DebitOrCredit string

const (
	DebitOrCreditDebit  DebitOrCredit = "DEBIT"
	DebitOrCreditCredit DebitOrCredit = "CREDIT"
)

type JournalCreateInput struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Status      Status  `json:"status"`
	Description *string `json:"description"`
}

// GetJournalId returns JournalCreateInput.JournalId, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetJournalId() string { return v.JournalId }

// GetName returns JournalCreateInput.Name, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetName() string { return v.Name }

// GetStatus returns JournalCreateInput.Status, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetStatus() Status { return v.Status }

// GetDescription returns JournalCreateInput.Description, and is useful for accessing the field via an interface.
func (v *JournalCreateInput) GetDescription() *string { return v.Description }

type JournalUpdateInput struct {
	Name        *string `json:"name"`
	Status      *Status `json:"status"`
	Description *string `json:"description"`
}

// GetName returns JournalUpdateInput.Name, and is useful for accessing the field via an interface.
func (v *JournalUpdateInput) GetName() *string { return v.Name }

// GetStatus returns JournalUpdateInput.Status, and is useful for accessing the field via an interface.
func (v *JournalUpdateInput) GetStatus() *Status { return v.Status }

// GetDescription returns JournalUpdateInput.Description, and is useful for accessing the field via an interface.
func (v *JournalUpdateInput) GetDescription() *string { return v.Description }

type Status string

const (
	StatusActive Status = "ACTIVE"
	StatusLocked Status = "LOCKED"
)

// __accountCreateInput is used internally by genqlient
type __accountCreateInput struct {
	Input AccountCreateInput `json:"input"`
}

// GetInput returns __accountCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountCreateInput) GetInput() AccountCreateInput { return v.Input }

// __accountGetInput is used internally by genqlient
type __accountGetInput struct {
	Id string `json:"id"`
}

// GetId returns __accountGetInput.Id, and is useful for accessing the field via an interface.
func (v *__accountGetInput) GetId() string { return v.Id }

// __accountSetCreateInput is used internally by genqlient
type __accountSetCreateInput struct {
	Input AccountSetCreateInput `json:"input"`
}

// GetInput returns __accountSetCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountSetCreateInput) GetInput() AccountSetCreateInput { return v.Input }

// __accountSetGetInput is used internally by genqlient
type __accountSetGetInput struct {
	Id string `json:"id"`
}

// GetId returns __accountSetGetInput.Id, and is useful for accessing the field via an interface.
func (v *__accountSetGetInput) GetId() string { return v.Id }

// __accountSetMemberAccountCreateInput is used internally by genqlient
type __accountSetMemberAccountCreateInput struct {
	AccountSetId string `json:"accountSetId"`
	AccountId    string `json:"accountId"`
}

// GetAccountSetId returns __accountSetMemberAccountCreateInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountCreateInput) GetAccountSetId() string { return v.AccountSetId }

// GetAccountId returns __accountSetMemberAccountCreateInput.AccountId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountCreateInput) GetAccountId() string { return v.AccountId }

// __accountSetMemberAccountRemoveInput is used internally by genqlient
type __accountSetMemberAccountRemoveInput struct {
	AccountSetId string `json:"accountSetId"`
	AccountId    string `json:"accountId"`
}

// GetAccountSetId returns __accountSetMemberAccountRemoveInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountRemoveInput) GetAccountSetId() string { return v.AccountSetId }

// GetAccountId returns __accountSetMemberAccountRemoveInput.AccountId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountRemoveInput) GetAccountId() string { return v.AccountId }

// __accountSetMemberAccountSetCreateInput is used internally by genqlient
type __accountSetMemberAccountSetCreateInput struct {
	AccountSetId       string `json:"accountSetId"`
	MemberAccountSetId string `json:"memberAccountSetId"`
}

// GetAccountSetId returns __accountSetMemberAccountSetCreateInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountSetCreateInput) GetAccountSetId() string { return v.AccountSetId }

// GetMemberAccountSetId returns __accountSetMemberAccountSetCreateInput.MemberAccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountSetCreateInput) GetMemberAccountSetId() string {
	return v.MemberAccountSetId
}

// __accountSetMemberAccountSetRemoveInput is used internally by genqlient
type __accountSetMemberAccountSetRemoveInput struct {
	AccountSetId       string `json:"accountSetId"`
	MemberAccountSetId string `json:"memberAccountSetId"`
}

// GetAccountSetId returns __accountSetMemberAccountSetRemoveInput.AccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountSetRemoveInput) GetAccountSetId() string { return v.AccountSetId }

// GetMemberAccountSetId returns __accountSetMemberAccountSetRemoveInput.MemberAccountSetId, and is useful for accessing the field via an interface.
func (v *__accountSetMemberAccountSetRemoveInput) GetMemberAccountSetId() string {
	return v.MemberAccountSetId
}

// __accountSetUpdateInput is used internally by genqlient
type __accountSetUpdateInput struct {
	Id    string                `json:"id"`
	Input AccountSetUpdateInput `json:"input"`
}

// GetId returns __accountSetUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *__accountSetUpdateInput) GetId() string { return v.Id }

// GetInput returns __accountSetUpdateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountSetUpdateInput) GetInput() AccountSetUpdateInput { return v.Input }

// __accountUpdateInput is used internally by genqlient
type __accountUpdateInput struct {
	Id    string             `json:"id"`
	Input AccountUpdateInput `json:"input"`
}

// GetId returns __accountUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *__accountUpdateInput) GetId() string { return v.Id }

// GetInput returns __accountUpdateInput.Input, and is useful for accessing the field via an interface.
func (v *__accountUpdateInput) GetInput() AccountUpdateInput { return v.Input }

// __bfxIntegrationCreateInput is used internally by genqlient
type __bfxIntegrationCreateInput struct {
	Input BfxIntegrationCreateInput `json:"input"`
}

// GetInput returns __bfxIntegrationCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__bfxIntegrationCreateInput) GetInput() BfxIntegrationCreateInput { return v.Input }

// __bfxIntegrationGetInput is used internally by genqlient
type __bfxIntegrationGetInput struct {
	Id string `json:"id"`
}

// GetId returns __bfxIntegrationGetInput.Id, and is useful for accessing the field via an interface.
func (v *__bfxIntegrationGetInput) GetId() string { return v.Id }

// __bigQueryIntegrationCreateInput is used internally by genqlient
type __bigQueryIntegrationCreateInput struct {
	Input BigQueryIntegrationCreateInput `json:"input"`
}

// GetInput returns __bigQueryIntegrationCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__bigQueryIntegrationCreateInput) GetInput() BigQueryIntegrationCreateInput { return v.Input }

// __bigQueryIntegrationGetInput is used internally by genqlient
type __bigQueryIntegrationGetInput struct {
	Id string `json:"id"`
}

// GetId returns __bigQueryIntegrationGetInput.Id, and is useful for accessing the field via an interface.
func (v *__bigQueryIntegrationGetInput) GetId() string { return v.Id }

// __journalCreateInput is used internally by genqlient
type __journalCreateInput struct {
	Input JournalCreateInput `json:"input"`
}

// GetInput returns __journalCreateInput.Input, and is useful for accessing the field via an interface.
func (v *__journalCreateInput) GetInput() JournalCreateInput { return v.Input }

// __journalGetInput is used internally by genqlient
type __journalGetInput struct {
	Id string `json:"id"`
}

// GetId returns __journalGetInput.Id, and is useful for accessing the field via an interface.
func (v *__journalGetInput) GetId() string { return v.Id }

// __journalUpdateInput is used internally by genqlient
type __journalUpdateInput struct {
	Id    string             `json:"id"`
	Input JournalUpdateInput `json:"input"`
}

// GetId returns __journalUpdateInput.Id, and is useful for accessing the field via an interface.
func (v *__journalUpdateInput) GetId() string { return v.Id }

// GetInput returns __journalUpdateInput.Input, and is useful for accessing the field via an interface.
func (v *__journalUpdateInput) GetInput() JournalUpdateInput { return v.Input }

// accountCreateAccountCreateAccountCreatePayload includes the requested fields of the GraphQL type AccountCreatePayload.
type accountCreateAccountCreateAccountCreatePayload struct {
	Account accountCreateAccountCreateAccountCreatePayloadAccount `json:"account"`
}

// GetAccount returns accountCreateAccountCreateAccountCreatePayload.Account, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayload) GetAccount() accountCreateAccountCreateAccountCreatePayloadAccount {
	return v.Account
}

// accountCreateAccountCreateAccountCreatePayloadAccount includes the requested fields of the GraphQL type Account.
type accountCreateAccountCreateAccountCreatePayloadAccount struct {
	AccountId         string           `json:"accountId"`
	Code              string           `json:"code"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Status            Status           `json:"status"`
	ExternalId        *string          `json:"externalId"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountId returns accountCreateAccountCreateAccountCreatePayloadAccount.AccountId, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetAccountId() string {
	return v.AccountId
}

// GetCode returns accountCreateAccountCreateAccountCreatePayloadAccount.Code, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetCode() string { return v.Code }

// GetName returns accountCreateAccountCreateAccountCreatePayloadAccount.Name, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetName() string { return v.Name }

// GetNormalBalanceType returns accountCreateAccountCreateAccountCreatePayloadAccount.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// GetStatus returns accountCreateAccountCreateAccountCreatePayloadAccount.Status, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetStatus() Status { return v.Status }

// GetExternalId returns accountCreateAccountCreateAccountCreatePayloadAccount.ExternalId, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetExternalId() *string {
	return v.ExternalId
}

// GetDescription returns accountCreateAccountCreateAccountCreatePayloadAccount.Description, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetDescription() *string {
	return v.Description
}

// GetMetadata returns accountCreateAccountCreateAccountCreatePayloadAccount.Metadata, and is useful for accessing the field via an interface.
func (v *accountCreateAccountCreateAccountCreatePayloadAccount) GetMetadata() *json.RawMessage {
	return v.Metadata
}

// accountCreateResponse is returned by accountCreate on success.
type accountCreateResponse struct {
	AccountCreate accountCreateAccountCreateAccountCreatePayload `json:"accountCreate"`
}

// GetAccountCreate returns accountCreateResponse.AccountCreate, and is useful for accessing the field via an interface.
func (v *accountCreateResponse) GetAccountCreate() accountCreateAccountCreateAccountCreatePayload {
	return v.AccountCreate
}

// accountGetAccount includes the requested fields of the GraphQL type Account.
type accountGetAccount struct {
	AccountId         string                                    `json:"accountId"`
	Name              string                                    `json:"name"`
	Description       *string                                   `json:"description"`
	Status            Status                                    `json:"status"`
	Metadata          *json.RawMessage                          `json:"metadata"`
	Code              string                                    `json:"code"`
	NormalBalanceType DebitOrCredit                             `json:"normalBalanceType"`
	ExternalId        *string                                   `json:"externalId"`
	Sets              accountGetAccountSetsAccountSetConnection `json:"sets"`
}

// GetAccountId returns accountGetAccount.AccountId, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetAccountId() string { return v.AccountId }

// GetName returns accountGetAccount.Name, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetName() string { return v.Name }

// GetDescription returns accountGetAccount.Description, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetDescription() *string { return v.Description }

// GetStatus returns accountGetAccount.Status, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetStatus() Status { return v.Status }

// GetMetadata returns accountGetAccount.Metadata, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetMetadata() *json.RawMessage { return v.Metadata }

// GetCode returns accountGetAccount.Code, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetCode() string { return v.Code }

// GetNormalBalanceType returns accountGetAccount.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetExternalId returns accountGetAccount.ExternalId, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetExternalId() *string { return v.ExternalId }

// GetSets returns accountGetAccount.Sets, and is useful for accessing the field via an interface.
func (v *accountGetAccount) GetSets() accountGetAccountSetsAccountSetConnection { return v.Sets }

// accountGetAccountSetsAccountSetConnection includes the requested fields of the GraphQL type AccountSetConnection.
type accountGetAccountSetsAccountSetConnection struct {
	// A list of nodes.
	Nodes []accountGetAccountSetsAccountSetConnectionNodesAccountSet `json:"nodes"`
}

// GetNodes returns accountGetAccountSetsAccountSetConnection.Nodes, and is useful for accessing the field via an interface.
func (v *accountGetAccountSetsAccountSetConnection) GetNodes() []accountGetAccountSetsAccountSetConnectionNodesAccountSet {
	return v.Nodes
}

// accountGetAccountSetsAccountSetConnectionNodesAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountGetAccountSetsAccountSetConnectionNodesAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountGetAccountSetsAccountSetConnectionNodesAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountGetAccountSetsAccountSetConnectionNodesAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountGetResponse is returned by accountGet on success.
type accountGetResponse struct {
	Account *accountGetAccount `json:"account"`
}

// GetAccount returns accountGetResponse.Account, and is useful for accessing the field via an interface.
func (v *accountGetResponse) GetAccount() *accountGetAccount { return v.Account }

// accountSetCreateAccountSetCreateAccountSetCreatePayload includes the requested fields of the GraphQL type AccountSetCreatePayload.
type accountSetCreateAccountSetCreateAccountSetCreatePayload struct {
	AccountSet accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetCreateAccountSetCreateAccountSetCreatePayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayload) GetAccountSet() accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet {
	return v.AccountSet
}

// accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet struct {
	AccountSetId      string           `json:"accountSetId"`
	JournalId         string           `json:"journalId"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountSetId returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// GetJournalId returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.JournalId, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetJournalId() string {
	return v.JournalId
}

// GetName returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Name, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetName() string {
	return v.Name
}

// GetNormalBalanceType returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// GetDescription returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Description, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetDescription() *string {
	return v.Description
}

// GetMetadata returns accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet.Metadata, and is useful for accessing the field via an interface.
func (v *accountSetCreateAccountSetCreateAccountSetCreatePayloadAccountSet) GetMetadata() *json.RawMessage {
	return v.Metadata
}

// accountSetCreateResponse is returned by accountSetCreate on success.
type accountSetCreateResponse struct {
	AccountSetCreate accountSetCreateAccountSetCreateAccountSetCreatePayload `json:"accountSetCreate"`
}

// GetAccountSetCreate returns accountSetCreateResponse.AccountSetCreate, and is useful for accessing the field via an interface.
func (v *accountSetCreateResponse) GetAccountSetCreate() accountSetCreateAccountSetCreateAccountSetCreatePayload {
	return v.AccountSetCreate
}

// accountSetGetAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetGetAccountSet struct {
	AccountSetId      string                                          `json:"accountSetId"`
	JournalId         string                                          `json:"journalId"`
	Name              string                                          `json:"name"`
	Description       *string                                         `json:"description"`
	NormalBalanceType DebitOrCredit                                   `json:"normalBalanceType"`
	Sets              accountSetGetAccountSetSetsAccountSetConnection `json:"sets"`
}

// GetAccountSetId returns accountSetGetAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetAccountSetId() string { return v.AccountSetId }

// GetJournalId returns accountSetGetAccountSet.JournalId, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetJournalId() string { return v.JournalId }

// GetName returns accountSetGetAccountSet.Name, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetName() string { return v.Name }

// GetDescription returns accountSetGetAccountSet.Description, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetDescription() *string { return v.Description }

// GetNormalBalanceType returns accountSetGetAccountSet.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetNormalBalanceType() DebitOrCredit { return v.NormalBalanceType }

// GetSets returns accountSetGetAccountSet.Sets, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSet) GetSets() accountSetGetAccountSetSetsAccountSetConnection {
	return v.Sets
}

// accountSetGetAccountSetSetsAccountSetConnection includes the requested fields of the GraphQL type AccountSetConnection.
type accountSetGetAccountSetSetsAccountSetConnection struct {
	// A list of nodes.
	Nodes []accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet `json:"nodes"`
}

// GetNodes returns accountSetGetAccountSetSetsAccountSetConnection.Nodes, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSetSetsAccountSetConnection) GetNodes() []accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet {
	return v.Nodes
}

// accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetGetAccountSetSetsAccountSetConnectionNodesAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetGetResponse is returned by accountSetGet on success.
type accountSetGetResponse struct {
	AccountSet *accountSetGetAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetGetResponse.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetGetResponse) GetAccountSet() *accountSetGetAccountSet { return v.AccountSet }

// accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload includes the requested fields of the GraphQL type AddToAccountSetPayload.
type accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload struct {
	AccountSet accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload) GetAccountSet() accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet {
	return v.AccountSet
}

// accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetMemberAccountCreateResponse is returned by accountSetMemberAccountCreate on success.
type accountSetMemberAccountCreateResponse struct {
	AddToAccountSet accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload `json:"addToAccountSet"`
}

// GetAddToAccountSet returns accountSetMemberAccountCreateResponse.AddToAccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountCreateResponse) GetAddToAccountSet() accountSetMemberAccountCreateAddToAccountSetAddToAccountSetPayload {
	return v.AddToAccountSet
}

// accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload includes the requested fields of the GraphQL type RemoveFromAccountSetPayload.
type accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload struct {
	AccountSet accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload) GetAccountSet() accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet {
	return v.AccountSet
}

// accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetMemberAccountRemoveResponse is returned by accountSetMemberAccountRemove on success.
type accountSetMemberAccountRemoveResponse struct {
	RemoveFromAccountSet accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload `json:"removeFromAccountSet"`
}

// GetRemoveFromAccountSet returns accountSetMemberAccountRemoveResponse.RemoveFromAccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountRemoveResponse) GetRemoveFromAccountSet() accountSetMemberAccountRemoveRemoveFromAccountSetRemoveFromAccountSetPayload {
	return v.RemoveFromAccountSet
}

// accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload includes the requested fields of the GraphQL type AddToAccountSetPayload.
type accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload struct {
	AccountSet accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload) GetAccountSet() accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet {
	return v.AccountSet
}

// accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetMemberAccountSetCreateResponse is returned by accountSetMemberAccountSetCreate on success.
type accountSetMemberAccountSetCreateResponse struct {
	AddToAccountSet accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload `json:"addToAccountSet"`
}

// GetAddToAccountSet returns accountSetMemberAccountSetCreateResponse.AddToAccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetCreateResponse) GetAddToAccountSet() accountSetMemberAccountSetCreateAddToAccountSetAddToAccountSetPayload {
	return v.AddToAccountSet
}

// accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload includes the requested fields of the GraphQL type RemoveFromAccountSetPayload.
type accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload struct {
	AccountSet accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload) GetAccountSet() accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet {
	return v.AccountSet
}

// accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet struct {
	AccountSetId string `json:"accountSetId"`
}

// GetAccountSetId returns accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// accountSetMemberAccountSetRemoveResponse is returned by accountSetMemberAccountSetRemove on success.
type accountSetMemberAccountSetRemoveResponse struct {
	RemoveFromAccountSet accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload `json:"removeFromAccountSet"`
}

// GetRemoveFromAccountSet returns accountSetMemberAccountSetRemoveResponse.RemoveFromAccountSet, and is useful for accessing the field via an interface.
func (v *accountSetMemberAccountSetRemoveResponse) GetRemoveFromAccountSet() accountSetMemberAccountSetRemoveRemoveFromAccountSetRemoveFromAccountSetPayload {
	return v.RemoveFromAccountSet
}

// accountSetUpdateAccountSetUpdateAccountSetUpdatePayload includes the requested fields of the GraphQL type AccountSetUpdatePayload.
type accountSetUpdateAccountSetUpdateAccountSetUpdatePayload struct {
	AccountSet accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet `json:"accountSet"`
}

// GetAccountSet returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayload.AccountSet, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayload) GetAccountSet() accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet {
	return v.AccountSet
}

// accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet includes the requested fields of the GraphQL type AccountSet.
type accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet struct {
	AccountSetId      string        `json:"accountSetId"`
	JournalId         string        `json:"journalId"`
	Name              string        `json:"name"`
	Description       *string       `json:"description"`
	NormalBalanceType DebitOrCredit `json:"normalBalanceType"`
}

// GetAccountSetId returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet.AccountSetId, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet) GetAccountSetId() string {
	return v.AccountSetId
}

// GetJournalId returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet.JournalId, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet) GetJournalId() string {
	return v.JournalId
}

// GetName returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet.Name, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet) GetName() string {
	return v.Name
}

// GetDescription returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet.Description, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet) GetDescription() *string {
	return v.Description
}

// GetNormalBalanceType returns accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountSetUpdateAccountSetUpdateAccountSetUpdatePayloadAccountSet) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// accountSetUpdateResponse is returned by accountSetUpdate on success.
type accountSetUpdateResponse struct {
	AccountSetUpdate accountSetUpdateAccountSetUpdateAccountSetUpdatePayload `json:"accountSetUpdate"`
}

// GetAccountSetUpdate returns accountSetUpdateResponse.AccountSetUpdate, and is useful for accessing the field via an interface.
func (v *accountSetUpdateResponse) GetAccountSetUpdate() accountSetUpdateAccountSetUpdateAccountSetUpdatePayload {
	return v.AccountSetUpdate
}

// accountUpdateAccountUpdateAccountUpdatePayload includes the requested fields of the GraphQL type AccountUpdatePayload.
type accountUpdateAccountUpdateAccountUpdatePayload struct {
	Account accountUpdateAccountUpdateAccountUpdatePayloadAccount `json:"account"`
}

// GetAccount returns accountUpdateAccountUpdateAccountUpdatePayload.Account, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayload) GetAccount() accountUpdateAccountUpdateAccountUpdatePayloadAccount {
	return v.Account
}

// accountUpdateAccountUpdateAccountUpdatePayloadAccount includes the requested fields of the GraphQL type Account.
type accountUpdateAccountUpdateAccountUpdatePayloadAccount struct {
	AccountId         string           `json:"accountId"`
	Code              string           `json:"code"`
	Name              string           `json:"name"`
	NormalBalanceType DebitOrCredit    `json:"normalBalanceType"`
	Status            Status           `json:"status"`
	ExternalId        *string          `json:"externalId"`
	Description       *string          `json:"description"`
	Metadata          *json.RawMessage `json:"metadata"`
}

// GetAccountId returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.AccountId, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetAccountId() string {
	return v.AccountId
}

// GetCode returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.Code, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetCode() string { return v.Code }

// GetName returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.Name, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetName() string { return v.Name }

// GetNormalBalanceType returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.NormalBalanceType, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetNormalBalanceType() DebitOrCredit {
	return v.NormalBalanceType
}

// GetStatus returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.Status, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetStatus() Status { return v.Status }

// GetExternalId returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.ExternalId, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetExternalId() *string {
	return v.ExternalId
}

// GetDescription returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.Description, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetDescription() *string {
	return v.Description
}

// GetMetadata returns accountUpdateAccountUpdateAccountUpdatePayloadAccount.Metadata, and is useful for accessing the field via an interface.
func (v *accountUpdateAccountUpdateAccountUpdatePayloadAccount) GetMetadata() *json.RawMessage {
	return v.Metadata
}

// accountUpdateResponse is returned by accountUpdate on success.
type accountUpdateResponse struct {
	AccountUpdate accountUpdateAccountUpdateAccountUpdatePayload `json:"accountUpdate"`
}

// GetAccountUpdate returns accountUpdateResponse.AccountUpdate, and is useful for accessing the field via an interface.
func (v *accountUpdateResponse) GetAccountUpdate() accountUpdateAccountUpdateAccountUpdatePayload {
	return v.AccountUpdate
}

// bfxIntegrationCreateBitfinexBitfinexMutation includes the requested fields of the GraphQL type BitfinexMutation.
type bfxIntegrationCreateBitfinexBitfinexMutation struct {
	IntegrationCreate bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload `json:"integrationCreate"`
}

// GetIntegrationCreate returns bfxIntegrationCreateBitfinexBitfinexMutation.IntegrationCreate, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutation) GetIntegrationCreate() bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload {
	return v.IntegrationCreate
}

// bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload includes the requested fields of the GraphQL type BfxIntegrationCreatePayload.
type bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload struct {
	Integration bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration `json:"integration"`
}

// GetIntegration returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload.Integration, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayload) GetIntegration() bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration {
	return v.Integration
}

// bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration includes the requested fields of the GraphQL type BfxIntegration.
type bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration struct {
	IntegrationId    string  `json:"integrationId"`
	Name             string  `json:"name"`
	Description      *string `json:"description"`
	OmnibusAccountId string  `json:"omnibusAccountId"`
}

// GetIntegrationId returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.Name, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.Description, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetDescription() *string {
	return v.Description
}

// GetOmnibusAccountId returns bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration.OmnibusAccountId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateBitfinexBitfinexMutationIntegrationCreateBfxIntegrationCreatePayloadIntegrationBfxIntegration) GetOmnibusAccountId() string {
	return v.OmnibusAccountId
}

// bfxIntegrationCreateResponse is returned by bfxIntegrationCreate on success.
type bfxIntegrationCreateResponse struct {
	Bitfinex bfxIntegrationCreateBitfinexBitfinexMutation `json:"bitfinex"`
}

// GetBitfinex returns bfxIntegrationCreateResponse.Bitfinex, and is useful for accessing the field via an interface.
func (v *bfxIntegrationCreateResponse) GetBitfinex() bfxIntegrationCreateBitfinexBitfinexMutation {
	return v.Bitfinex
}

// bfxIntegrationGetBitfinexBitfinexQuery includes the requested fields of the GraphQL type BitfinexQuery.
type bfxIntegrationGetBitfinexBitfinexQuery struct {
	Integration *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration `json:"integration"`
}

// GetIntegration returns bfxIntegrationGetBitfinexBitfinexQuery.Integration, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQuery) GetIntegration() *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration {
	return v.Integration
}

// bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration includes the requested fields of the GraphQL type BfxIntegration.
type bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration struct {
	IntegrationId    string  `json:"integrationId"`
	Name             string  `json:"name"`
	Description      *string `json:"description"`
	OmnibusAccountId string  `json:"omnibusAccountId"`
}

// GetIntegrationId returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.Name, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.Description, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetDescription() *string {
	return v.Description
}

// GetOmnibusAccountId returns bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration.OmnibusAccountId, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetBitfinexBitfinexQueryIntegrationBfxIntegration) GetOmnibusAccountId() string {
	return v.OmnibusAccountId
}

// bfxIntegrationGetResponse is returned by bfxIntegrationGet on success.
type bfxIntegrationGetResponse struct {
	Bitfinex bfxIntegrationGetBitfinexBitfinexQuery `json:"bitfinex"`
}

// GetBitfinex returns bfxIntegrationGetResponse.Bitfinex, and is useful for accessing the field via an interface.
func (v *bfxIntegrationGetResponse) GetBitfinex() bfxIntegrationGetBitfinexBitfinexQuery {
	return v.Bitfinex
}

// bigQueryIntegrationCreateBigQueryBigQueryMutation includes the requested fields of the GraphQL type BigQueryMutation.
type bigQueryIntegrationCreateBigQueryBigQueryMutation struct {
	IntegrationCreate bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload `json:"integrationCreate"`
}

// GetIntegrationCreate returns bigQueryIntegrationCreateBigQueryBigQueryMutation.IntegrationCreate, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutation) GetIntegrationCreate() bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload {
	return v.IntegrationCreate
}

// bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload includes the requested fields of the GraphQL type BigQueryIntegrationCreatePayload.
type bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload struct {
	Integration bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration `json:"integration"`
}

// GetIntegration returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload.Integration, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayload) GetIntegration() bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration {
	return v.Integration
}

// bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration includes the requested fields of the GraphQL type BigQueryIntegration.
type bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration struct {
	IntegrationId string  `json:"integrationId"`
	Name          string  `json:"name"`
	Description   *string `json:"description"`
	GcpProjectId  string  `json:"gcpProjectId"`
	GcpDatasetId  string  `json:"gcpDatasetId"`
}

// GetIntegrationId returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration.Name, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration.Description, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration) GetDescription() *string {
	return v.Description
}

// GetGcpProjectId returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration.GcpProjectId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration) GetGcpProjectId() string {
	return v.GcpProjectId
}

// GetGcpDatasetId returns bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration.GcpDatasetId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateBigQueryBigQueryMutationIntegrationCreateBigQueryIntegrationCreatePayloadIntegrationBigQueryIntegration) GetGcpDatasetId() string {
	return v.GcpDatasetId
}

// bigQueryIntegrationCreateResponse is returned by bigQueryIntegrationCreate on success.
type bigQueryIntegrationCreateResponse struct {
	BigQuery bigQueryIntegrationCreateBigQueryBigQueryMutation `json:"bigQuery"`
}

// GetBigQuery returns bigQueryIntegrationCreateResponse.BigQuery, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationCreateResponse) GetBigQuery() bigQueryIntegrationCreateBigQueryBigQueryMutation {
	return v.BigQuery
}

// bigQueryIntegrationGetBigQueryBigQueryQuery includes the requested fields of the GraphQL type BigQueryQuery.
type bigQueryIntegrationGetBigQueryBigQueryQuery struct {
	Integration *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration `json:"integration"`
}

// GetIntegration returns bigQueryIntegrationGetBigQueryBigQueryQuery.Integration, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQuery) GetIntegration() *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration {
	return v.Integration
}

// bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration includes the requested fields of the GraphQL type BigQueryIntegration.
type bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration struct {
	IntegrationId string  `json:"integrationId"`
	Name          string  `json:"name"`
	Description   *string `json:"description"`
	GcpProjectId  string  `json:"gcpProjectId"`
	GcpDatasetId  string  `json:"gcpDatasetId"`
}

// GetIntegrationId returns bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration.IntegrationId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration) GetIntegrationId() string {
	return v.IntegrationId
}

// GetName returns bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration.Name, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration) GetName() string {
	return v.Name
}

// GetDescription returns bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration.Description, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration) GetDescription() *string {
	return v.Description
}

// GetGcpProjectId returns bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration.GcpProjectId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration) GetGcpProjectId() string {
	return v.GcpProjectId
}

// GetGcpDatasetId returns bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration.GcpDatasetId, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetBigQueryBigQueryQueryIntegrationBigQueryIntegration) GetGcpDatasetId() string {
	return v.GcpDatasetId
}

// bigQueryIntegrationGetResponse is returned by bigQueryIntegrationGet on success.
type bigQueryIntegrationGetResponse struct {
	BigQuery bigQueryIntegrationGetBigQueryBigQueryQuery `json:"bigQuery"`
}

// GetBigQuery returns bigQueryIntegrationGetResponse.BigQuery, and is useful for accessing the field via an interface.
func (v *bigQueryIntegrationGetResponse) GetBigQuery() bigQueryIntegrationGetBigQueryBigQueryQuery {
	return v.BigQuery
}

// journalCreateJournalCreateJournalCreatePayload includes the requested fields of the GraphQL type JournalCreatePayload.
type journalCreateJournalCreateJournalCreatePayload struct {
	Journal journalCreateJournalCreateJournalCreatePayloadJournal `json:"journal"`
}

// GetJournal returns journalCreateJournalCreateJournalCreatePayload.Journal, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayload) GetJournal() journalCreateJournalCreateJournalCreatePayloadJournal {
	return v.Journal
}

// journalCreateJournalCreateJournalCreatePayloadJournal includes the requested fields of the GraphQL type Journal.
type journalCreateJournalCreateJournalCreatePayloadJournal struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Status      Status  `json:"status"`
}

// GetJournalId returns journalCreateJournalCreateJournalCreatePayloadJournal.JournalId, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetJournalId() string {
	return v.JournalId
}

// GetName returns journalCreateJournalCreateJournalCreatePayloadJournal.Name, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetName() string { return v.Name }

// GetDescription returns journalCreateJournalCreateJournalCreatePayloadJournal.Description, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetDescription() *string {
	return v.Description
}

// GetStatus returns journalCreateJournalCreateJournalCreatePayloadJournal.Status, and is useful for accessing the field via an interface.
func (v *journalCreateJournalCreateJournalCreatePayloadJournal) GetStatus() Status { return v.Status }

// journalCreateResponse is returned by journalCreate on success.
type journalCreateResponse struct {
	JournalCreate journalCreateJournalCreateJournalCreatePayload `json:"journalCreate"`
}

// GetJournalCreate returns journalCreateResponse.JournalCreate, and is useful for accessing the field via an interface.
func (v *journalCreateResponse) GetJournalCreate() journalCreateJournalCreateJournalCreatePayload {
	return v.JournalCreate
}

// journalGetJournal includes the requested fields of the GraphQL type Journal.
type journalGetJournal struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Status      Status  `json:"status"`
	Description *string `json:"description"`
}

// GetJournalId returns journalGetJournal.JournalId, and is useful for accessing the field via an interface.
func (v *journalGetJournal) GetJournalId() string { return v.JournalId }

// GetName returns journalGetJournal.Name, and is useful for accessing the field via an interface.
func (v *journalGetJournal) GetName() string { return v.Name }

// GetStatus returns journalGetJournal.Status, and is useful for accessing the field via an interface.
func (v *journalGetJournal) GetStatus() Status { return v.Status }

// GetDescription returns journalGetJournal.Description, and is useful for accessing the field via an interface.
func (v *journalGetJournal) GetDescription() *string { return v.Description }

// journalGetResponse is returned by journalGet on success.
type journalGetResponse struct {
	Journal *journalGetJournal `json:"journal"`
}

// GetJournal returns journalGetResponse.Journal, and is useful for accessing the field via an interface.
func (v *journalGetResponse) GetJournal() *journalGetJournal { return v.Journal }

// journalUpdateJournalUpdateJournalUpdatePayload includes the requested fields of the GraphQL type JournalUpdatePayload.
type journalUpdateJournalUpdateJournalUpdatePayload struct {
	Journal journalUpdateJournalUpdateJournalUpdatePayloadJournal `json:"journal"`
}

// GetJournal returns journalUpdateJournalUpdateJournalUpdatePayload.Journal, and is useful for accessing the field via an interface.
func (v *journalUpdateJournalUpdateJournalUpdatePayload) GetJournal() journalUpdateJournalUpdateJournalUpdatePayloadJournal {
	return v.Journal
}

// journalUpdateJournalUpdateJournalUpdatePayloadJournal includes the requested fields of the GraphQL type Journal.
type journalUpdateJournalUpdateJournalUpdatePayloadJournal struct {
	JournalId   string  `json:"journalId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Status      Status  `json:"status"`
}

// GetJournalId returns journalUpdateJournalUpdateJournalUpdatePayloadJournal.JournalId, and is useful for accessing the field via an interface.
func (v *journalUpdateJournalUpdateJournalUpdatePayloadJournal) GetJournalId() string {
	return v.JournalId
}

// GetName returns journalUpdateJournalUpdateJournalUpdatePayloadJournal.Name, and is useful for accessing the field via an interface.
func (v *journalUpdateJournalUpdateJournalUpdatePayloadJournal) GetName() string { return v.Name }

// GetDescription returns journalUpdateJournalUpdateJournalUpdatePayloadJournal.Description, and is useful for accessing the field via an interface.
func (v *journalUpdateJournalUpdateJournalUpdatePayloadJournal) GetDescription() *string {
	return v.Description
}

// GetStatus returns journalUpdateJournalUpdateJournalUpdatePayloadJournal.Status, and is useful for accessing the field via an interface.
func (v *journalUpdateJournalUpdateJournalUpdatePayloadJournal) GetStatus() Status { return v.Status }

// journalUpdateResponse is returned by journalUpdate on success.
type journalUpdateResponse struct {
	JournalUpdate journalUpdateJournalUpdateJournalUpdatePayload `json:"journalUpdate"`
}

// GetJournalUpdate returns journalUpdateResponse.JournalUpdate, and is useful for accessing the field via an interface.
func (v *journalUpdateResponse) GetJournalUpdate() journalUpdateJournalUpdateJournalUpdatePayload {
	return v.JournalUpdate
}

// The query or mutation executed by accountCreate.
const accountCreate_Operation = `
mutation accountCreate ($input: AccountCreateInput!) {
	accountCreate(input: $input) {
		account {
			accountId
			code
			name
			normalBalanceType
			status
			externalId
			description
			metadata
		}
	}
}
`

func accountCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input AccountCreateInput,
) (*accountCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountCreate",
		Query:  accountCreate_Operation,
		Variables: &__accountCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ accountCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountGet.
const accountGet_Operation = `
query accountGet ($id: UUID!) {
	account(id: $id) {
		accountId
		name
		description
		status
		metadata
		code
		normalBalanceType
		externalId
		sets(first: 10) {
			nodes {
				accountSetId
			}
		}
	}
}
`

func accountGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*accountGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountGet",
		Query:  accountGet_Operation,
		Variables: &__accountGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ accountGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetCreate.
const accountSetCreate_Operation = `
mutation accountSetCreate ($input: AccountSetCreateInput!) {
	accountSetCreate(input: $input) {
		accountSet {
			accountSetId
			journalId
			name
			normalBalanceType
			description
			metadata
		}
	}
}
`

func accountSetCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input AccountSetCreateInput,
) (*accountSetCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetCreate",
		Query:  accountSetCreate_Operation,
		Variables: &__accountSetCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ accountSetCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetGet.
const accountSetGet_Operation = `
query accountSetGet ($id: UUID!) {
	accountSet(id: $id) {
		accountSetId
		journalId
		name
		description
		normalBalanceType
		sets(first: 10) {
			nodes {
				accountSetId
			}
		}
	}
}
`

func accountSetGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*accountSetGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetGet",
		Query:  accountSetGet_Operation,
		Variables: &__accountSetGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ accountSetGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetMemberAccountCreate.
const accountSetMemberAccountCreate_Operation = `
mutation accountSetMemberAccountCreate ($accountSetId: UUID!, $accountId: UUID!) {
	addToAccountSet(input: {accountSetId:$accountSetId,memberId:$accountId,memberType:ACCOUNT}) {
		accountSet {
			accountSetId
		}
	}
}
`

func accountSetMemberAccountCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	accountSetId string,
	accountId string,
) (*accountSetMemberAccountCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetMemberAccountCreate",
		Query:  accountSetMemberAccountCreate_Operation,
		Variables: &__accountSetMemberAccountCreateInput{
			AccountSetId: accountSetId,
			AccountId:    accountId,
		},
	}
	var err_ error

	var data_ accountSetMemberAccountCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetMemberAccountRemove.
const accountSetMemberAccountRemove_Operation = `
mutation accountSetMemberAccountRemove ($accountSetId: UUID!, $accountId: UUID!) {
	removeFromAccountSet(input: {accountSetId:$accountSetId,memberId:$accountId,memberType:ACCOUNT}) {
		accountSet {
			accountSetId
		}
	}
}
`

func accountSetMemberAccountRemove(
	ctx_ context.Context,
	client_ graphql.Client,
	accountSetId string,
	accountId string,
) (*accountSetMemberAccountRemoveResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetMemberAccountRemove",
		Query:  accountSetMemberAccountRemove_Operation,
		Variables: &__accountSetMemberAccountRemoveInput{
			AccountSetId: accountSetId,
			AccountId:    accountId,
		},
	}
	var err_ error

	var data_ accountSetMemberAccountRemoveResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetMemberAccountSetCreate.
const accountSetMemberAccountSetCreate_Operation = `
mutation accountSetMemberAccountSetCreate ($accountSetId: UUID!, $memberAccountSetId: UUID!) {
	addToAccountSet(input: {accountSetId:$accountSetId,memberId:$memberAccountSetId,memberType:ACCOUNT_SET}) {
		accountSet {
			accountSetId
		}
	}
}
`

func accountSetMemberAccountSetCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	accountSetId string,
	memberAccountSetId string,
) (*accountSetMemberAccountSetCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetMemberAccountSetCreate",
		Query:  accountSetMemberAccountSetCreate_Operation,
		Variables: &__accountSetMemberAccountSetCreateInput{
			AccountSetId:       accountSetId,
			MemberAccountSetId: memberAccountSetId,
		},
	}
	var err_ error

	var data_ accountSetMemberAccountSetCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetMemberAccountSetRemove.
const accountSetMemberAccountSetRemove_Operation = `
mutation accountSetMemberAccountSetRemove ($accountSetId: UUID!, $memberAccountSetId: UUID!) {
	removeFromAccountSet(input: {accountSetId:$accountSetId,memberId:$memberAccountSetId,memberType:ACCOUNT_SET}) {
		accountSet {
			accountSetId
		}
	}
}
`

func accountSetMemberAccountSetRemove(
	ctx_ context.Context,
	client_ graphql.Client,
	accountSetId string,
	memberAccountSetId string,
) (*accountSetMemberAccountSetRemoveResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetMemberAccountSetRemove",
		Query:  accountSetMemberAccountSetRemove_Operation,
		Variables: &__accountSetMemberAccountSetRemoveInput{
			AccountSetId:       accountSetId,
			MemberAccountSetId: memberAccountSetId,
		},
	}
	var err_ error

	var data_ accountSetMemberAccountSetRemoveResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountSetUpdate.
const accountSetUpdate_Operation = `
mutation accountSetUpdate ($id: UUID!, $input: AccountSetUpdateInput!) {
	accountSetUpdate(id: $id, input: $input) {
		accountSet {
			accountSetId
			journalId
			name
			description
			normalBalanceType
		}
	}
}
`

func accountSetUpdate(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	input AccountSetUpdateInput,
) (*accountSetUpdateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountSetUpdate",
		Query:  accountSetUpdate_Operation,
		Variables: &__accountSetUpdateInput{
			Id:    id,
			Input: input,
		},
	}
	var err_ error

	var data_ accountSetUpdateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by accountUpdate.
const accountUpdate_Operation = `
mutation accountUpdate ($id: UUID!, $input: AccountUpdateInput!) {
	accountUpdate(id: $id, input: $input) {
		account {
			accountId
			code
			name
			normalBalanceType
			status
			externalId
			description
			metadata
		}
	}
}
`

func accountUpdate(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	input AccountUpdateInput,
) (*accountUpdateResponse, error) {
	req_ := &graphql.Request{
		OpName: "accountUpdate",
		Query:  accountUpdate_Operation,
		Variables: &__accountUpdateInput{
			Id:    id,
			Input: input,
		},
	}
	var err_ error

	var data_ accountUpdateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bfxIntegrationCreate.
const bfxIntegrationCreate_Operation = `
mutation bfxIntegrationCreate ($input: BfxIntegrationCreateInput!) {
	bitfinex {
		integrationCreate(input: $input) {
			integration {
				integrationId
				name
				description
				omnibusAccountId
			}
		}
	}
}
`

func bfxIntegrationCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input BfxIntegrationCreateInput,
) (*bfxIntegrationCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "bfxIntegrationCreate",
		Query:  bfxIntegrationCreate_Operation,
		Variables: &__bfxIntegrationCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ bfxIntegrationCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bfxIntegrationGet.
const bfxIntegrationGet_Operation = `
query bfxIntegrationGet ($id: UUID!) {
	bitfinex {
		integration(id: $id) {
			integrationId
			name
			description
			omnibusAccountId
		}
	}
}
`

func bfxIntegrationGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*bfxIntegrationGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "bfxIntegrationGet",
		Query:  bfxIntegrationGet_Operation,
		Variables: &__bfxIntegrationGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ bfxIntegrationGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bigQueryIntegrationCreate.
const bigQueryIntegrationCreate_Operation = `
mutation bigQueryIntegrationCreate ($input: BigQueryIntegrationCreateInput!) {
	bigQuery {
		integrationCreate(input: $input) {
			integration {
				integrationId
				name
				description
				gcpProjectId
				gcpDatasetId
			}
		}
	}
}
`

func bigQueryIntegrationCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input BigQueryIntegrationCreateInput,
) (*bigQueryIntegrationCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "bigQueryIntegrationCreate",
		Query:  bigQueryIntegrationCreate_Operation,
		Variables: &__bigQueryIntegrationCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ bigQueryIntegrationCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by bigQueryIntegrationGet.
const bigQueryIntegrationGet_Operation = `
query bigQueryIntegrationGet ($id: UUID!) {
	bigQuery {
		integration(id: $id) {
			integrationId
			name
			description
			gcpProjectId
			gcpDatasetId
		}
	}
}
`

func bigQueryIntegrationGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*bigQueryIntegrationGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "bigQueryIntegrationGet",
		Query:  bigQueryIntegrationGet_Operation,
		Variables: &__bigQueryIntegrationGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ bigQueryIntegrationGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by journalCreate.
const journalCreate_Operation = `
mutation journalCreate ($input: JournalCreateInput!) {
	journalCreate(input: $input) {
		journal {
			journalId
			name
			description
			status
		}
	}
}
`

func journalCreate(
	ctx_ context.Context,
	client_ graphql.Client,
	input JournalCreateInput,
) (*journalCreateResponse, error) {
	req_ := &graphql.Request{
		OpName: "journalCreate",
		Query:  journalCreate_Operation,
		Variables: &__journalCreateInput{
			Input: input,
		},
	}
	var err_ error

	var data_ journalCreateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by journalGet.
const journalGet_Operation = `
query journalGet ($id: UUID!) {
	journal(id: $id) {
		journalId
		name
		status
		description
	}
}
`

func journalGet(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
) (*journalGetResponse, error) {
	req_ := &graphql.Request{
		OpName: "journalGet",
		Query:  journalGet_Operation,
		Variables: &__journalGetInput{
			Id: id,
		},
	}
	var err_ error

	var data_ journalGetResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by journalUpdate.
const journalUpdate_Operation = `
mutation journalUpdate ($id: UUID!, $input: JournalUpdateInput!) {
	journalUpdate(id: $id, input: $input) {
		journal {
			journalId
			name
			description
			status
		}
	}
}
`

func journalUpdate(
	ctx_ context.Context,
	client_ graphql.Client,
	id string,
	input JournalUpdateInput,
) (*journalUpdateResponse, error) {
	req_ := &graphql.Request{
		OpName: "journalUpdate",
		Query:  journalUpdate_Operation,
		Variables: &__journalUpdateInput{
			Id:    id,
			Input: input,
		},
	}
	var err_ error

	var data_ journalUpdateResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
